-- 1. increase presentation count by 70 and turn obver by 1500
SELECT * FROM VORFUEHRUNGEN WHERE FILM_ID=1 AND FILM_V_ID=1;

UPDATE VORFUEHRUNGEN SET ANZAHL_VORFUEHRUNGEN=(ANZAHL_VORFUEHRUNGEN + 70), UMSATZ=(UMSATZ + 1500)
WHERE FILM_ID=1 AND FILM_V_ID=1;

COMMIT; 

SELECT * FROM VORFUEHRUNGEN WHERE FILM_ID=1 AND FILM_V_ID=1;

-- 2. Add role for an actor for movie 'Terminator 3'
SELECT * FROM ROLLE;

INSERT INTO ROLLE VALUES (
    (SELECT FILM_ID FROM FILM WHERE UPPER(TITEL) = UPPER('Terminator 3')),
    (SELECT SCHAUSPIELER_ID FROM SCHAUSPIELER WHERE VORNAME='Greg' AND NACHNAME = 'Newmann'),
    'Kellner',
    'N',
    1000);

COMMIT; 

SELECT * FROM ROLLE;


-- 2.1 Update the first movie column 
SELECT * FROM SCHAUSPIELER WHERE VORNAME='Greg' AND NACHNAME = 'Newmann';

UPDATE SCHAUSPIELER SET ERSTER_FILM=(SELECT FILM_ID FROM FILM WHERE UPPER(TITEL) = UPPER('Terminator 3'))
WHERE VORNAME='Greg'
AND NACHNAME = 'Newmann';

COMMIT;

SELECT * FROM SCHAUSPIELER WHERE VORNAME='Greg' AND NACHNAME = 'Newmann';


-- 3. increase the salary for the actors of movie 'Terminator 3' where the movies 
-- are not the actors first movie
SELECT * 
FROM ROLLE r
INNER JOIN FILM f ON (f.FILM_ID = r.FILM_ID) AND UPPER(f.TITEL) = UPPER('Terminator 3');

UPDATE ROLLE  SET GAGE = (GAGE * 1.10)
WHERE SCHAUSPIELER_ID NOT IN (
    SELECT DISTINCT  s.SCHAUSPIELER_ID
    FROM SCHAUSPIELER s
    INNER JOIN ROLLE r ON r.SCHAUSPIELER_ID = s.SCHAUSPIELER_ID
    INNER JOIN FILM f ON (f.FILM_ID = s.ERSTER_FILM) AND (r.FILM_ID = s.ERSTER_FILM)
) AND FILM_ID = (SELECT FILM_ID FROM FILM WHERE UPPER(TITEL) = UPPER('Terminator 3'));

COMMIT;

SELECT * 
FROM ROLLE r
INNER JOIN FILM f ON (f.FILM_ID = r.FILM_ID) AND UPPER(f.TITEL) = UPPER('Terminator 3');


-- 4. Delete all actors who palyed not in a movie
SELECT * FROM SCHAUSPIELER;

DELETE FROM SCHAUSPIELER WHERE SCHAUSPIELER_ID NOT IN (
    SELECT SCHAUSPIELER_ID
    FROM ROLLE
);

COMMIT;

SELECT * FROM SCHAUSPIELER;
